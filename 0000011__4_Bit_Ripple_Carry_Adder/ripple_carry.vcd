$date
	Fri Jun 06 16:32:47 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ripple_carry_adder_tb $end
$scope module uut $end
$var wire 4 ! A [3:0] $end
$var wire 4 " B [3:0] $end
$var wire 1 # s_3 $end
$var wire 1 $ s_2 $end
$var wire 1 % s_1 $end
$var wire 1 & s_0 $end
$var wire 1 ' c_3 $end
$var wire 1 ( c_2 $end
$var wire 1 ) c_1 $end
$var wire 1 * c_0 $end
$var wire 5 + Sum [4:0] $end
$scope module first $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 . Cin $end
$var wire 1 * cout $end
$var wire 1 & sum $end
$upscope $end
$scope module fourth $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 ' cout $end
$var wire 1 # sum $end
$var wire 1 ( Cin $end
$upscope $end
$scope module second $end
$var wire 1 1 A $end
$var wire 1 2 B $end
$var wire 1 * Cin $end
$var wire 1 ) cout $end
$var wire 1 % sum $end
$upscope $end
$scope module third $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 ) Cin $end
$var wire 1 ( cout $end
$var wire 1 $ sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
04
03
02
01
00
0/
0.
0-
0,
b0 +
0*
0)
0(
0'
0&
0%
0$
0#
b0 "
b0 !
$end
#100
b1 +
1&
1,
b1 !
#200
1%
0&
1*
b1010 +
1#
1-
10
b1001 "
#300
0$
0)
0#
1&
0*
b11 +
1%
00
0,
11
b1 "
b10 !
#400
1$
0&
b100 +
0%
1)
0-
12
b10 "
#500
b101 +
1&
1,
b11 !
#600
1%
b110 +
0&
1*
1-
b11 "
#700
1'
0%
b10000 +
0$
0*
0)
1(
0-
02
14
10
0,
01
13
b1100 "
b100 !
#800
1&
1$
0(
b10101 +
0#
1,
03
1/
b1001 !
#900
b10111 +
1%
04
11
13
b1000 "
b1111 !
#1000
